# .github/workflows/pr-build.yml
name: PR

on:
  pull_request:
    branches: [ main ] 

  #workflow_dispatch:   # Manual trigger

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        id: nuget-cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj', '**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Restore NuGet packages
        run: dotnet restore Caravel.sln

      - name: Build solution (Release)
        run: | 
          dotnet build Caravel.sln \
           --configuration Release \
           --no-restore

      - name: Run Caravel.Core unit tests
        run: |
          dotnet test ./test/UnitTests/Caravel.Core.UnitTests/Caravel.Core.UnitTests.csproj \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=unit-test-results.trx" \
            --results-directory ${{ github.workspace }}/test-results \
            --collect:"XPlat Code Coverage"
        continue-on-error: false

      - name: Run InMemoryJourneyDemo tests
        run: |
          dotnet test ./examples/InMemoryJourneyDemo/InMemoryJourneyDemo.csproj \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=inmemoryjourneydemo-test-results.trx" \
            --results-directory ${{ github.workspace }}/test-results \
            --collect:"XPlat Code Coverage"
        continue-on-error: false

      - name: Ensure browsers are installed
        run: |
          pwsh ./examples/PlaywrightDemo/WebSite.PlaywrightTests/bin/Release/net9.0/playwright.ps1 \
            install \
            --with-deps \
            chromium

      - name: Run Playwright tests
        run: |
          dotnet test ./examples/PlaywrightDemo/WebSite.PlaywrightTests/WebSite.PlaywrightTests.csproj \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=playwright-test-results.trx" \
            --results-directory ${{ github.workspace }}/test-results \
            --collect:"XPlat Code Coverage"
        continue-on-error: false

      - name: Upload Test Result Files
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ${{ github.workspace }}/**/test-results/**/*
          retention-days: 1

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: always()
        with:
          trx_files: "${{ github.workspace }}/**/*.trx"

      - name: Combine Coverage Reports
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        if: always()
        with:
          reports: "**/*.cobertura.xml"
          targetdir: "${{ github.workspace }}"
          reporttypes: "Cobertura"
          verbosity: "Info"
          title: "Code Coverage"
          tag: "${{ github.run_number }}_${{ github.run_id }}"
          customSettings: ""
          toolpath: "reportgeneratortool"

      - name: Upload Combined Coverage XML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 1

      - name: Publish Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        if: always()
        with:
          filename: "Cobertura.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both # Publish "code-coverage-results.md"
          thresholds: "50 60"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md